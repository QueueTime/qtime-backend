name: Deploy

# on:
#   push:
#     branches:
#       - master
on: [push]

env:
  SERVICE_NAME: qtime
  IMAGE_NAME: qtime-container
  IMAGE_TAG: latest
  AWS_FLASK_CONTAINER_NAME: flask

jobs:
  deploy:
    # needs: [typecheck, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ca-central-1"
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_DEFAULT_REGION
          aws configure set region $AWS_DEFAULT_REGION
      - name: Install AWS CLI and lightsail
        # install LightsailCTL Plugin (https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-install-software)
        run: |
          sudo apt-get update && sudo apt-get -y install curl jq
          curl https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl -o /usr/local/bin/lightsailctl
          chmod +x /usr/local/bin/lightsailctl
      - name: Create firebase credentials
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: serviceAccountKey.json
          json: ${{ secrets.GCP_SA_KEY }}
      - name: Build docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
      - name: Push docker image to AWS Lightsail
        run: |
          aws lightsail push-container-image \
            --service-name ${{ env.SERVICE_NAME }}  \
            --label ${{ env.SERVICE_NAME }}-latest  \
            --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      - name: Deploy docker image to AWS Lightsail
        run: |
          # get most recently uploaded image
          IMAGE_TAG=$(aws lightsail get-container-images --service ${{ env.SERVICE_NAME }} | jq -r .containerImages[0].image)

          aws lightsail create-container-service-deployment \
            --service-name ${{ env.SERVICE_NAME }} \
            --containers "{
              \"${{ env.AWS_FLASK_CONTAINER_NAME }}\": {
                \"image\": \"$IMAGE_TAG\",
                \"ports\": {
                  \"5000\": \"HTTP\"
                }
              }
            }" \
            --public-endpoint "{
              \"containerName\": \"${{ env.AWS_FLASK_CONTAINER_NAME }}\",
              \"containerPort\": 5000,
              \"healthCheck\": {
                \"path\": \"/api/health\",
                \"successCodes\": \"200\"
              }
            }"
