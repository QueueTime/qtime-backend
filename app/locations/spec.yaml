openapi: 3.0.0
info:
  title: "QueueTime Flask REST API"
  description: "QueueTime API for finding wait times of various points of interests at McMaster University"
  version: "1.0.0"

components:
  schemas:
    POI:
      type: "object"
      required:
        - _id
        - name
        - class
        - type
        - distance
        - estimate
        - lastUpdated
      properties:
        _id:
          type: "string"
        name:
          type: "string"
        class:
          type: "string"
        type:
          type: "string"
        location:
          type: "object"
          required:
            - latitude
            - longitude
          properties:
            latitude:
              type: "number"
            longitude:
              type: "number"
        distance:
          type: "number"
        estimate:
          type: "number"
        lastUpdated:
          type: "number"
    POI_suggestion:
      type: "object"
      required:
        - suggestion_name
      properties:
        suggestion_name:
          type: "string"
        notes:
          type: "string"
    POIDetails:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        address:
          type: string
        class:
          type: string
        type:
          type: string
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
        imageUrl:
          type: string
        hoursOfOperation:
          type: object
          required:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          properties:
            Monday:
              type: string
            Tuesday:
              type: string
            Wednesday:
              type: string
            Thursday:
              type: string
            Friday:
              type: string
            Saturday:
              type: string
            Sunday:
              type: string
        histogram:
          type: array
          items:
            type: object
            properties:
              hour:
                type: number
              estimate:
                type: number
        distance:
          type: number
        estimate:
          type: number
        lastUpdated:
          type: number
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error description
          example: "Invalid data provided"
  parameters:
    poi_id:
      name: "poi_id"
      description: "Point of interest name of the POI to get"
      in: path
      required: True
      schema:
        type: "string"

paths:
  # POI API endpoints
  /places/list:
    get:
      x-openapi-router-controller: app.locations.api
      operationId: get_all_POI
      tags:
        - POI
      summary: "Read the list of POI"
      parameters:
        - name: class
          in: query
          description: Classification of POIs to get
          required: False
          schema:
            type: string
            enum: [queue, occupancy]
        - name: latitude
          in: query
          description: Latitude of user location to sort POI by
          required: True
          schema:
            type: number
        - name: longitude
          in: query
          description: Longitude of user location to sort POI by
          required: True
          schema:
            type: number
        - name: sort
          in: query
          description: Sort POI by distance or estimate
          required: False
          schema:
            type: string
            enum: [distance, estimate]
      responses:
        "200":
          description: "Successfully read POI list"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/POI"
  /places/{poi_id}/details:
    get:
      x-openapi-router-controller: app.locations.api
      operationId: get_POI
      tags:
        - POI
      summary: "Fetch the details of one POI"
      parameters:
        - $ref: "#/components/parameters/poi_id"
      responses:
        "200":
          description: "Successfully read the POI"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/POIDetails"
        "404":
          description: "POI with specified id name not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /places/suggest:
    post:
      x-openapi-router-controller: app.locations.api
      operationId: suggest_new_POI
      tags:
        - POI
      summary: "Suggest a new POI"
      requestBody:
        x-body-name: "poi_suggestion"
        description: "POI suggestion to create"
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/POI_suggestion"
      responses:
        "204":
          description: "Successfully read the POI"
        "400":
          description: "Invalid POI submission"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
